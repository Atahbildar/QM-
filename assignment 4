import numpy as np
import matplotlib.pyplot as plt
from scipy import integrate
import pandas as pd
from scipy.integrate import solve_ivp

u_values = [0, 0.001]


def V(x):
    V = 0
    return V

def numerov(x_min,x_max,e,initial_c,N, V):

    x = np.linspace(x_min, x_max, N)
    u0, u1 = initial_c[0], initial_c[1]

    Vx = []
    for i in x:
        Vx.append(V(i))
    Vx = np.array(Vx)
    alpha = -(Vx - e)
    h=x[1]-x[0]
    c_i = 1 + (((h ** 2) / 12) * alpha)
    l = 0
    u = [u0, u1]
    for i in range(1,len(x)-1):
        l+=1
        u2 = (((12 - 10*c_i[i]) * u[i]) - (c_i[i - 1] * u[i-1])) / (c_i[i + 1])
        u.append(u2)
        if l==len(x)-2:
            break
    return x,u

plt.plot(np.linspace(-1/2, 1/2, 500),numerov(-1/2,1/2,40, u_values, 500,V)[1])
plt.xlabel('x')
plt.ylabel('u')
plt.title("Solution for eq(1)")
plt.grid()
plt.show()


#EQ. 3

u_values = [1, 1.001]

def ics(n):
    x=np.linspace(0,5,n)
    h=x[1]-x[0]
    u_0=1
    u_1= 1+ ((h**2)/2) + 3*((h**4)/24)

    return [u_0,u_1]

def V2(x):
    V = x**2
    return V
x1=np.linspace(0, 5, 2)
u1=numerov(0,5,-1,ics(2),2,V2)[1]
plt.plot(x1,)
plt.title('u vs x for N=2')
plt.xlabel('x')
plt.ylabel('u')
plt.grid()
plt.show()

x=numerov(0,5,-1,ics(2),2,V2)[1]
u_5=[1,0]

def f(u,x):
    return (u_5[1], (1+x**2)*u_5[0])

y0_1=[0,1]
us_1=integrate.odeint(f,y0_1,x)

ys_1=us_1[:,0]

df=pd.DataFrame({'x_i':x1,'u_num_i':u1,'u_inbuilt':ys_1})
print(df)




x2=np.linspace(0, 5, 4)
u2=numerov(0,5,-1,ics(4),4,V2)[1]
plt.plot(x2,u2)
plt.title('u vs x for N=4')
plt.xlabel('x')
plt.ylabel('u')
plt.grid()
plt.show()


x=numerov(0,1,-1,ics(100),20,V2)[0]
u=[1,0]

def f(u,x):
    return (u[1], (1+x**2)*u[0])


y0=[1,0]
us=integrate.odeint(f,y0,x)

ys=us[:,0]

plt.plot(x,numerov(0,1,-1,ics(100),20,V2)[1],label='calculated value by numerov',c='g')
plt.scatter(x, ys, c='m', label='value by scipy inbuilt func.')
plt.grid()
plt.xlabel('x')
plt.ylabel('u')
plt.title('Numerov and Scipy comparison')
plt.legend()
plt.show()


M=np.arange(1,7,1)
for i in M:
    plt.plot(np.linspace(0, 5, 2**i), numerov(0,5,-1, ics(2**i), 2**i, V)[1], label='for grid points= '+str(2**i))
plt.legend()
plt.title('u VS x Fofr Different Values Of k')
plt.xlabel('x')
plt.ylabel('u')
plt.grid()
plt.show()




